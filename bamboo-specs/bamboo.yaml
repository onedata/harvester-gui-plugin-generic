---
version: 2
plan:
  key: VFS-HGPG
plan-permissions:
- groups:
  - plggveildev
  permissions:
  - view
  - edit
  - build
  - clone
- users:
  - plglopiola
  - plgborzecki
  - plgjliput
  permissions:
  - view
  - edit
  - build
  - clone
  - admin
---
version: 2
plan:
  project-key: VFS
  key: HGPG
  name: harvester-gui-plugin-generic
repositories:
- harvester-gui-plugin-generic:
    scope: global
- bamboos:
    scope: global
branches:
  create: for-new-branch
  delete:
    after-deleted-days: 7
    after-inactive-days: 30
  link-to-jira: true
labels: []
dependencies:
  require-all-stages-passing: false
  enabled-for-branches: true
  block-strategy: none
  plans: []
other:
  concurrent-build-plugin: system-default
stages:
- Dependencies:
    manual: false
    final: false
    jobs:
    - Fetch dependencies
- Test and build:
    manual: false
    final: false
    jobs:
    - Run tests
    - Build and publish
Fetch dependencies:
  key: FD
  other: &other-job-configuration
    clean-working-dir: true
    all-other-apps:
      custom:
        auto: {}
        buildHangingConfig.enabled: 'false'
  tasks:
  - checkout: &checkout-main
      path: harvester-gui-plugin-generic
      force-clean-build: 'true'
      description: Checkout Default Repository
  - checkout: &checkout-bamboos
      repository: bamboos
      path: harvester-gui-plugin-generic/bamboos
      force-clean-build: 'false'
      description: Get bamboos scripts
  - script: &inject-bamboo-related-contents
      interpreter: SHELL
      scripts:
      - |-
        cd harvester-gui-plugin-generic

        ln -s ./bamboos/docker/docker_build.py docker_build.py
        ln -s ./bamboos/make.py make.py

        cat > dockers.config <<EOF
        {
            "builder": "onedata/gui_builder:v21"
        }

        EOF

        cat > Dockerfile <<EOF
        FROM docker.onedata.org/empty-base:1.1.0

        COPY gui_static.tar.gz /artefact/

        # make artefact available under specfic path for docker < 1.10
        RUN ["/bin/busybox","sh","/pub-artefact","/var/www/html"]

        EOF

        cd ..
      description: Inject bamboo-related contents
  - script:
      interpreter: SHELL
      scripts:
      - ./make.py -r ${bamboo.agentWorkingDirectory} deps
      working-dir: harvester-gui-plugin-generic
      description: Fetch dependencies
  - script:
      interpreter: SHELL
      scripts:
      - tar -czf deps.tar.gz harvester-gui-plugin-generic/src/node_modules
      description: Package dependencies
  final-tasks:
  - script: &clear-env
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - curl ${bamboo.OnedataFinalTasksURL} | bash -
      description: Clear env
  artifacts:
  - name: deps.tar.gz
    pattern: deps.tar.gz
    shared: true
    required: true
  requirements:
  - gui
  artifact-subscriptions: []
Run tests:
  key: TEST
  other: *other-job-configuration
  tasks:
  - checkout: *checkout-main
  - checkout: *checkout-bamboos
  - script: *inject-bamboo-related-contents
  - script:
      interpreter: SHELL
      scripts:
      - tar -xzmf deps.tar.gz
      description: Unpack dependencies
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - |-
        ./make.py -r ${bamboo.agentWorkingDirectory} lint
        LINT_RESULT=$?
        ./make.py test_xvfb_xunit_output
        return `expr $LINT_RESULT + $?`
      working-dir: harvester-gui-plugin-generic
      description: Run tests
  final-tasks:
  - test-parser:
      type: junit
      ignore-time: 'false'
      test-results: harvester-gui-plugin-generic/src/tmp/test-results.xml
      description: Parse test results
  - script: *clear-env
  requirements:
  - gui
  artifact-subscriptions:
  - artifact: deps.tar.gz
Build and publish:
  key: BAP
  other: *other-job-configuration
  tasks:
  - checkout: *checkout-main
  - checkout: *checkout-bamboos
  - script: *inject-bamboo-related-contents
  - script:
      interpreter: SHELL
      scripts:
      - tar -xzmf deps.tar.gz
      description: Unpack dependencies
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - ./make.py -r ${bamboo.agentWorkingDirectory} build_prod
      working-dir: harvester-gui-plugin-generic
      description: Build (production)
  - script:
      interpreter: SHELL
      scripts:
      - rm -rf src
      working-dir: harvester-gui-plugin-generic
      description: Remove redundant source files
  - script:
      interpreter: BINSH_OR_CMDEXE
      scripts:
      - |-
        . /home/bamboo/.credsrc
        ./bamboos/scripts/publish_gui_pkg_docker.sh --user ${ONEDATA_DOCKER_USER} --password ${ONEDATA_DOCKER_PASS}
      working-dir: harvester-gui-plugin-generic
      description: Docker build and push
  final-tasks:
  - script: *clear-env
  artifacts:
  - &art-item-build
    name: docker-build-list.json
    location: harvester-gui-plugin-generic
    pattern: docker-build-list.json
    shared: true
    required: true
  - <<: *art-item-build
    name: docker-build-report.txt
    pattern: docker-build-report.txt
  - <<: *art-item-build
    name: gui-image.conf
    pattern: gui-image.conf
  requirements:
  - gui
  artifact-subscriptions:
  - artifact: deps.tar.gz
...
